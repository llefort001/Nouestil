<?php

namespace AppBundle\Repository;


/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findUsersByGroup($id = null)
    {
        if (!isset($id))
            return null;

        $qb = $this->_em->createQueryBuilder();
        $qb->select('u', 'g')
            ->from('AppBundle\Entity\User', 'u')
            ->leftJoin('u.group', 'g')
            ->where('u.group = :id')
            ->setParameter('id', $id);

        $query = $qb->getQuery();

        return $query->getResult();
    }

    public function findProfessor()
    {
        $qb= $this->_em->createQueryBuilder();
        $qb->select('u','g')
            ->from('AppBundle\Entity\User','u')
            ->leftJoin('u.group','g')
            ->where('g.name= :prof')
            ->setParameter('prof', 'professor');
        return $qb;
    }

    public function queryNotUsersCourse($courseId)
    {
//        $qb2= $this->_em->createQueryBuilder();
//        $qb2->select('u','c')
//            ->from('AppBundle\Entity\User','u')
//            ->leftJoin('u.courses','c')
//            ->where('c.id = :id')
//            ->setParameter('id',$courseId);
//
//
//        $qb1= $this->_em->createQueryBuilder();
//        $qb1->select('u','g')
//            ->from('AppBundle\Entity\User','u')
//            ->leftJoin('u.group', 'g')
//            ->where('g.name != :admin')
//            ->setParameter('admin', 'admin');
//
//        $result=array_diff_assoc($qb1->getQuery()->getResult(),$qb2->getQuery()->getResult());
//        dump($qb1->getQuery()->getResult());dump($qb2->getQuery()->getResult());dump($result);die;
//        return $result;
    }

    public function findUsersInCourse($courseId)
    {
        $qb2= $this->_em->createQueryBuilder();
        $qb2->select('u','c')
            ->from('AppBundle\Entity\User','u')
            ->leftJoin('u.courses','c')
            ->where('c.id = :id')
            ->setParameter('id',$courseId);
        return $qb2->getQuery()->getResult();
    }

    public function usersListExceptAdim()
    {
        $qb= $this->_em->createQueryBuilder();
        $qb->select('u','g')
            ->from('AppBundle\Entity\User','u')
            ->leftJoin('u.group', 'g')
            ->where('g.name != :admin')
            ->setParameter('admin', 'admin');
        return $qb->getQuery()->getResult();
    }

}
